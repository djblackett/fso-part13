services:
  frontend:
    build:
      context: bloglist-frontend
      dockerfile: Dockerfile
    environment:
      REACT_APP_BACKEND_URL: http://proxy/api
#    ports:
#        - ":4000"
    networks:
        - my_network
    image: bloglist-frontend-prod


  backend:
    depends_on:
      - db
    build:
      context: bloglist-backend
      dockerfile: Dockerfile
#    ports:
#    - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - REQUEST_ORIGIN=http://proxy/
      - SECRET=Secret
      - SQL_DB_URL=postgres://postgres:example@db:5432/postgres
      - DATABASE_URL=mongodb+srv://fullstack:Vv3oxVAaSX5qlGv3@cluster0.ph36nzi.mongodb.net/production?retryWrites=true&w=majority
      - TEST_MONGODB_URI=mongodb+srv://fullstack:Vv3oxVAaSX5qlGv3@cluster0.ph36nzi.mongodb.net/test?retryWrites=true&w=majority
    networks:
      - my_network

  proxy:
    image: nginx
    hostname: proxy
    container_name: proxy
    tty: true
    stdin_open: true
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - my_network

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - "5432:5432"
    networks:
      - my_network
    volumes:
#      - ./postgres-data/:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - my_network


networks:
  my_network:
    driver: bridge