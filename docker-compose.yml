services:

  backend:
    depends_on:
      db:
        condition: service_healthy
        restart: true
    build:
      dockerfile: Dockerfile
    ports:
    - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - REQUEST_ORIGIN=http://proxy/
      - SECRET=Secret
      - SQL_DB_URL=postgres://postgres:example@db:5432/postgres
    networks:
      - my_network
#    volumes:
#      - ./:/usr/src/app/
    command:

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      PGUSER: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    networks:
      - my_network
    volumes:
      - ./postgres-data/:/var/lib/postgresql/data

    healthcheck:
        test: "pg_isready -U $$POSTGRES_USER"
        interval: 3s
        timeout: 5s
        retries: 5


networks:
  my_network:
    driver: bridge